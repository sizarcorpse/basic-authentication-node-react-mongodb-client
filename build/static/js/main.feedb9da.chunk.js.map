{"version":3,"sources":["util/AuthRoute.js","components/Nav/Nav.js","components/Home/Home.js","components/Pricing/Pricing.js","components/Login/Login.js","components/Signup/Signup.js","App.js","index.js"],"names":["AuthRoute","Component","component","isAuthenticated","rest","render","props","to","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","useContext","UserContext","user","setUser","logOut","a","fetch","method","credentials","headers","authorization","accesstoken","history","push","className","CssBaseline","AppBar","position","Toolbar","Box","style","textDecoration","color","Typography","variant","onClick","Avatar","alt","src","box","Button","icon","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","footer","borderTop","divider","cards","Home","useState","content","setContent","useEffect","json","result","fetchProtected","console","log","Container","maxWidth","align","gutterBottom","paragraph","username","Grid","container","justify","item","map","key","xs","sm","md","Card","CardMedia","image","CardContent","CardActions","size","ul","margin","listStyle","appBar","borderBottom","toolbar","flexWrap","toolbarTitle","link","cardHeader","type","grey","cardPricing","justifyContent","alignItems","marginBottom","breakpoints","up","tiers","price","description","buttonText","buttonVariant","subheader","Pricing","tier","CardHeader","titleTypographyProps","subheaderTypographyProps","action","line","fullWidth","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","avatar","secondary","main","form","width","submit","root2","Login","logingError","setLogingError","validationSchema","Yup","email","lowercase","required","password","min","onSubmit","values","resetForm","body","JSON","stringify","userCredential","error","Paper","elevation","square","initialValues","validateOnChange","validateOnBlur","touched","errors","handleChange","handleBlur","Alert","severity","FormControl","Boolean","TextField","id","value","label","name","autoFocus","onChange","onBlur","FormHelperText","autoComplete","FormControlLabel","control","Checkbox","href","Signup","matches","trim","max","success","createContext","App","loading","setLoading","getRefreshToken","Provider","path","Nav","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.feedb9da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated === true ? <Component {...props} /> : <Redirect to=\"/\" />\r\n    }\r\n  />\r\n);\r\n\r\nexport default AuthRoute;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const logOut = async () => {\r\n    await fetch(\"/api/user/logout\", {\r\n      method: \"POST\",\r\n      credentials: \"include\", // Needed to include the cookie\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${user.accesstoken}`,\r\n      },\r\n    });\r\n    // Clear user from context\r\n    setUser({});\r\n    // Navigate back to startpage\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Box className={classes.title}>\r\n            <Link\r\n              to={\"/Home\"}\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Home\r\n              </Typography>\r\n            </Link>\r\n          </Box>\r\n\r\n          {user.isAuthenticated === true ? (\r\n            <Box>\r\n              <Link to={\"/logout\"} onClick={logOut}>\r\n                <Avatar\r\n                  alt=\"Remy Sharp\"\r\n                  src=\"https://source.unsplash.com/random\"\r\n                />\r\n              </Link>\r\n            </Box>\r\n          ) : (\r\n            <Box className={classes.box}>\r\n              <Link\r\n                to={\"/pricing\"}\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n              >\r\n                <Button color=\"inherit\">Pricing</Button>\r\n              </Link>\r\n              <Link\r\n                to={\"/login\"}\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n              >\r\n                <Button color=\"inherit\">Login</Button>\r\n              </Link>\r\n            </Box>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport default function Home() {\r\n  const [user] = useContext(UserContext);\r\n  const [content, setContent] = useState(\"\");\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    async function fetchProtected() {\r\n      const result = await (\r\n        await fetch(\"http://localhost:4000/api/user\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `Bearer ${user.accesstoken}`,\r\n          },\r\n        })\r\n      ).json();\r\n      if (result) setContent(result);\r\n    }\r\n    fetchProtected();\r\n  }, [user]);\r\n\r\n  console.log(content);\r\n\r\n  return (\r\n    <Box>\r\n      <CssBaseline />\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Basic Authentication w/ React | Node | Jwt\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              hi, Your are login now as a '{content.username}'\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Main call to action\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    Secondary action\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Heading\r\n                    </Typography>\r\n                    <Typography>\r\n                      This is a media card. You can use this section to describe\r\n                      the content.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      View\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Edit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n      </footer>\r\n      {/* End footer */}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StarIcon from \"@material-ui/icons/StarBorder\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\",\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[700],\r\n  },\r\n  cardPricing: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    marginTop: theme.spacing(8),\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(6),\r\n    },\r\n  },\r\n}));\r\n\r\nconst tiers = [\r\n  {\r\n    title: \"Free\",\r\n    price: \"0\",\r\n    description: [\r\n      \"10 users included\",\r\n      \"2 GB of storage\",\r\n      \"Help center access\",\r\n      \"Email support\",\r\n    ],\r\n    buttonText: \"Sign up for free\",\r\n    buttonVariant: \"outlined\",\r\n  },\r\n  {\r\n    title: \"Pro\",\r\n    subheader: \"Most popular\",\r\n    price: \"15\",\r\n    description: [\r\n      \"20 users included\",\r\n      \"10 GB of storage\",\r\n      \"Help center access\",\r\n      \"Priority email support\",\r\n    ],\r\n    buttonText: \"Get started\",\r\n    buttonVariant: \"contained\",\r\n  },\r\n  {\r\n    title: \"Enterprise\",\r\n    price: \"30\",\r\n    description: [\r\n      \"50 users included\",\r\n      \"30 GB of storage\",\r\n      \"Help center access\",\r\n      \"Phone & email support\",\r\n    ],\r\n    buttonText: \"Contact us\",\r\n    buttonVariant: \"outlined\",\r\n  },\r\n];\r\n\r\nexport default function Pricing() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n        >\r\n          Pricing\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Quickly build an effective pricing table for your potential customers\r\n          with this layout. It&apos;s built with default Material-UI components\r\n          with little customization.\r\n        </Typography>\r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"flex-end\">\r\n          {tiers.map((tier) => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid\r\n              item\r\n              key={tier.title}\r\n              xs={12}\r\n              sm={tier.title === \"Enterprise\" ? 12 : 6}\r\n              md={4}\r\n            >\r\n              <Card>\r\n                <CardHeader\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: \"center\" }}\r\n                  subheaderTypographyProps={{ align: \"center\" }}\r\n                  action={tier.title === \"Pro\" ? <StarIcon /> : null}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                      ${tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                      /mo\r\n                    </Typography>\r\n                  </div>\r\n                  <ul>\r\n                    {tier.description.map((line) => (\r\n                      <Typography\r\n                        component=\"li\"\r\n                        variant=\"subtitle1\"\r\n                        align=\"center\"\r\n                        key={line}\r\n                      >\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    fullWidth\r\n                    variant={tier.buttonVariant}\r\n                    color=\"primary\"\r\n                  >\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n      </footer>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  root2: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [logingError, setLogingError] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Please Enter A Valid Email\")\r\n      .lowercase()\r\n      .required(\"Email Can Not Be Empty\"),\r\n    password: Yup.string().min(8),\r\n  });\r\n\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    const { email, password } = values;\r\n\r\n    const userCredential = await (\r\n      await fetch(\"/api/user/login\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n    ).json();\r\n\r\n    if (userCredential.accesstoken) {\r\n      setUser({\r\n        accesstoken: userCredential.accesstoken,\r\n        isAuthenticated: true,\r\n      });\r\n      props.history.push(\"/home\");\r\n    } else {\r\n      setLogingError(userCredential.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                handleChange,\r\n                handleBlur,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  {logingError && (\r\n                    <div className={classes.root2}>\r\n                      <Alert severity=\"error\">{logingError}</Alert>\r\n                    </div>\r\n                  )}\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.email && Boolean(errors.email)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"email\"\r\n                          value={values.email}\r\n                          label=\"Email Address\"\r\n                          name=\"email\"\r\n                          /* autoComplete=\"email\" */\r\n                          autoFocus\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          fullWidth\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.email ? errors.email : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.password && Boolean(errors.password)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          type=\"password\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"password\"\r\n                          value={values.password}\r\n                          /* label=\"Password\" */\r\n                          name=\"password\"\r\n                          autoComplete=\"password\"\r\n                          autoFocus\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.password ? errors.password : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                      <Grid item xs>\r\n                        <Link\r\n                          href=\"#\"\r\n                          variant=\"body2\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          Forgot password?\r\n                        </Link>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link\r\n                          to={\"/\"}\r\n                          variant=\"body2\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Signup(props) {\r\n  const classes = useStyles();\r\n  const [logingError, setLogingError] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string()\r\n      .matches(/^[a-z0-9_.]+$/, \"Enter a Valid Username\")\r\n      .trim()\r\n      .min(4, \"Username is Too Short\")\r\n      .max(30, \"Username is Too Long\")\r\n      .lowercase()\r\n      .required(),\r\n    email: Yup.string()\r\n      .email(\"Please Enter A Valid Email\")\r\n      .min(8, \"Please Enter A Valid Email\")\r\n      .max(30, \"Eamil is Too Large\")\r\n      .lowercase()\r\n      .required(\"Email Can Not Be Empty\"),\r\n    password: Yup.string().min(8),\r\n  });\r\n\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    const { username, email, password } = values;\r\n\r\n    const userCredential = await (\r\n      await fetch(\"/api/user/signup\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n    ).json();\r\n    console.log(userCredential);\r\n\r\n    if (userCredential.success) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      setLogingError(userCredential.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                handleChange,\r\n                handleBlur,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  {logingError && (\r\n                    <div className={classes.root2}>\r\n                      <Alert severity=\"error\">{logingError}</Alert>\r\n                    </div>\r\n                  )}\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.username && Boolean(errors.username)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"username\"\r\n                          value={values.username}\r\n                          label=\"Username\"\r\n                          name=\"username\"\r\n                          autoComplete=\"username\"\r\n                          autoFocus\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.username ? errors.username : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.email && Boolean(errors.email)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"email\"\r\n                          value={values.email}\r\n                          label=\"Email Address\"\r\n                          name=\"email\"\r\n                          autoComplete=\"email\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.email ? errors.email : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.password && Boolean(errors.password)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          type=\"password\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"password\"\r\n                          value={values.password}\r\n                          label=\"Password\"\r\n                          name=\"password\"\r\n                          autoComplete=\"password\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.password ? errors.password : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                    <Grid container>\r\n                      <Grid item xs>\r\n                        <Link\r\n                          href=\"#\"\r\n                          variant=\"body2\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          Forgot password?\r\n                        </Link>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link\r\n                          to={\"/login\"}\r\n                          variant=\"body2\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          {\"You have an account? Sign in\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport AuthRoute from \"./util/AuthRoute\";\r\n\r\n// // import jwtDecode from \"jwt-decode\";\r\n\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Pricing from \"./components/Pricing/Pricing\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Signup from \"./components/Signup/Signup\";\r\n\r\n// import NotFound from \"./components/NotFound/NotFound\";\r\n\r\nexport const UserContext = createContext([]);\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (user) {\r\n      async function getRefreshToken() {\r\n        const userCredential = await (\r\n          await fetch(\"/api/user/refreshtoken\", {\r\n            method: \"POST\",\r\n            credentials: \"include\", // Needed to include the cookie\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n        ).json();\r\n        if (userCredential.accesstoken) {\r\n          setUser({\r\n            accesstoken: userCredential.accesstoken,\r\n            isAuthenticated: true,\r\n          });\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      }\r\n      getRefreshToken();\r\n    }\r\n  }, []);\r\n\r\n  if (loading) return <div>Loding..</div>;\r\n\r\n  return (\r\n    <UserContext.Provider value={[user, setUser]}>\r\n      <Router>\r\n        <Route path=\"/\" component={Nav} />\r\n        <Switch>\r\n          <AuthRoute\r\n            path=\"/home\"\r\n            exact\r\n            component={Home}\r\n            isAuthenticated={user.isAuthenticated}\r\n          />\r\n          <Route path=\"/Pricing\" exact component={Pricing} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" exact component={Signup} />\r\n\r\n          {/* //         <Route path=\"\" component={NotFound} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}